From a87d620564ef4336a8ad0eac41db63c602f40b02 Mon Sep 17 00:00:00 2001
From: Tias Guns <tias@ulyssis.org>
Date: Sun, 12 Feb 2023 00:02:54 +0100
Subject: [PATCH] collecting models, by Ruben Kindt

---
 cpmpy/solvers/gurobi.py   | 2 ++
 cpmpy/solvers/minizinc.py | 2 ++
 cpmpy/solvers/ortools.py  | 2 ++
 cpmpy/solvers/pysat.py    | 2 ++
 cpmpy/solvers/pysdd.py    | 2 ++
 5 files changed, 10 insertions(+)

diff --git a/cpmpy/solvers/gurobi.py b/cpmpy/solvers/gurobi.py
index 0bb8195..b733863 100644
--- a/cpmpy/solvers/gurobi.py
+++ b/cpmpy/solvers/gurobi.py
@@ -82,6 +82,8 @@ class CPM_gurobi(SolverInterface):
             raise Exception(
                 "CPM_gurobi: Install the python package 'gurobipy' and make sure your licence is activated!")
         import gurobipy as gp
+        if cpm_model is not None:
+            cpm_model.to_file("Pickled"+(str(time.time())).replace('.',""))
 
         # TODO: subsolver could be a GRB_ENV if a user would want to hand one over
         self.grb_model = gp.Model(env=GRB_ENV)
diff --git a/cpmpy/solvers/minizinc.py b/cpmpy/solvers/minizinc.py
index 01d0bd7..4a2bf26 100644
--- a/cpmpy/solvers/minizinc.py
+++ b/cpmpy/solvers/minizinc.py
@@ -114,6 +114,8 @@ class CPM_minizinc(SolverInterface):
             raise Exception("CPM_minizinc: Install the python package 'minizinc'")
 
         import minizinc
+        if cpm_model is not None:
+            cpm_model.to_file("Pickled"+(str(time.time())).replace('.',""))
 
         # determine subsolver
         if subsolver is None or subsolver == 'minizinc':
diff --git a/cpmpy/solvers/ortools.py b/cpmpy/solvers/ortools.py
index eb328c5..8a803ce 100644
--- a/cpmpy/solvers/ortools.py
+++ b/cpmpy/solvers/ortools.py
@@ -76,6 +76,8 @@ class CPM_ortools(SolverInterface):
         - cpm_model: Model(), a CPMpy Model() (optional)
         - subsolver: None
         """
+        if cpm_model is not None:
+            cpm_model.to_file("Pickled"+(str(time.time())).replace('.',""))
         if not self.supported():
             raise Exception("Install the python 'ortools' package to use this solver interface")
 
diff --git a/cpmpy/solvers/pysat.py b/cpmpy/solvers/pysat.py
index 9815670..e603eb8 100644
--- a/cpmpy/solvers/pysat.py
+++ b/cpmpy/solvers/pysat.py
@@ -100,6 +100,8 @@ class CPM_pysat(SolverInterface):
         if cpm_model and cpm_model.objective_ is not None:
             raise NotSupportedError("CPM_pysat: only satisfaction, does not support an objective function")
 
+        if cpm_model is not None:
+            cpm_model.to_file("Pickled"+(str(time.time())).replace('.',""))
         from pysat.formula import IDPool
         from pysat.solvers import Solver
 
diff --git a/cpmpy/solvers/pysdd.py b/cpmpy/solvers/pysdd.py
index 63d9729..4b85f12 100644
--- a/cpmpy/solvers/pysdd.py
+++ b/cpmpy/solvers/pysdd.py
@@ -74,6 +74,8 @@ class CPM_pysdd(SolverInterface):
         if cpm_model and cpm_model.objective_ is not None:
             raise NotSupportedError("CPM_pysdd: only satisfaction, does not support an objective function")
 
+        if cpm_model is not None:
+            cpm_model.to_file("Pickled"+(str(time.time())).replace('.',""))
         # initialise the native solver object, or at least their existence
         self.pysdd_vtree = None
         self.pysdd_manager = None
-- 
2.30.2

